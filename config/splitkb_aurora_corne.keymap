#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

// layers
// keys

#define HYPER LS(LC(LA(LGUI)))

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        next_desktop: next_desktop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp RIGHT>;
            label = "NEXT_DESKTOP";
        };

        previous_desktop: previous_desktop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT>;
            label = "PREVIOUS_DESKTOP";
        };
    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        rotary_desktop_move: rotary_desktop_move {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTARY_DESKTOP_MOVE";
            #sensor-binding-cells = <0>;
            bindings = <&next_desktop>, <&previous_desktop>;
        };

        sensor_rotate_var: sensor_rotate_var {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "SENSOR_ROTATE_VAR";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp TILDE        &ht NUMBER_1 Q    &ht NUMBER_2 W      &ht NUMBER_3 E           &ht NUMBER_4 R  &ht NUMBER_5 T         &ht NUMBER_6 Y  &ht NUMBER_7 U  &ht NUMBER_8 I     &ht NUMBER_9 O  &ht NUMBER_0 P             &mt DELETE BACKSPACE
&ht LS(TAB) TAB  &mt LEFT_SHIFT A  &mt LEFT_CONTROL S  &mt LEFT_ALT D           &mt LGUI F      &lt 1 G                &kp H           &mt RGUI J      &mt RIGHT_ALT K    &mt RCTRL L     &mt RIGHT_SHIFT SEMICOLON  &kp ESCAPE
&kp LEFT_SHIFT   &kp Z             &kp X               &kp C                    &kp V           &kp B                  &kp N           &kp M           &kp COMMA          &kp DOT         &kp FSLH                   &none
                                                       &ht C_PLAY_PAUSE C_MUTE  &lt 2 SPACE     &ht LS(ENTER) ENTER    &mo 3           &mo 4           &ht C_STOP C_STOP
            >;

            sensor-bindings =
                <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;

            label = "QWERTY";
        };

        ru {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &kp LBKT  &kp RBKT
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &kp SQT   &kp BSLH
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none     &none
                     &none  &none  &none    &none  &none  &none
            >;
        };

        copy {
            bindings = <
&none  &none      &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
&none  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &none    &none  &none  &none  &none  &none  &none
&none  &none      &none      &none      &none      &none    &none  &none  &none  &none  &none  &none
                             &none      &none      &none    &none  &none  &none
            >;
        };

        characters {
            bindings = <
&none  &none  &none  &none    &none        &none        &none  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none          &none  &none
&none  &none  &none  &kp SQT  &kp LS(DQT)  &kp PLUS     &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION   &none  &none
&none  &none  &none  &none    &kp EQUAL    &kp MINUS    &none  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH  &none  &none
                     &none    &none        &mo 4        &none  &none                 &none
            >;
        };

        Settings {
            bindings = <
&none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3         &none           &none          &none        &none      &none  &none
&none  &none       &none         &none         &none         &ext_power EP_TOG    &kp LEFT_ARROW  &kp DOWN       &kp UP       &kp RIGHT  &none  &none
&none  &none       &none         &none         &none         &none                &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none  &none
                                 &none         &none         &none                &none           &none          &none
            >;

            label = "Settings ";
        };
    };
};

// template
//  ┌──┬──┬──┬──┬──┬──┐      ┌──┬──┬──┬──┬──┬──┐
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  └──┴──┴──┴─┬┴─┬┴─┬┴─┐   ┌┴─┬┴─┬┴─┬┴──┴──┴──┘
//             │  │  │  │   │  │  │  │
//             └──┴──┴──┘   └──┴──┴──┘
